openapi: 3.0.2
info:
  title: ''
  version: V1.0
  description: |
    API Details
    - Component: 
    - Reference: eav-component
    - Enviroment: dev
    - Version: V1.0
    - Repository: [online](https://github.com/ConductionNL/EAV-component) / [zip](https://github.com/ConductionNL/EAV-component/archive/master.zip)
    - Docker Image: [online]() 
    - Datamodel: [postman](schema/eav-component.postman_collection.json) / [oas](schema/openapi.yaml) / [pdf](schema/datamodel.pdf) / [modelio (zip)](schema/Datamodel_Modelio.zip) 
    
    &#039;Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.&#039;         
    
paths:
  /attributes:
    get:
      tags:
        - Attribute
      operationId: getAttributeCollection
      summary: 'Retrieves the collection of Attribute resources.'
      responses:
        200:
          description: 'Attribute collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Attribute:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Attribute:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attribute-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attribute-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attribute-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attribute-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attribute-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attribute-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attribute-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attribute-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attribute-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attribute-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Attribute-read'
      parameters:
        -
          name: exclusiveMaximum
          in: query
          required: false
          schema:
            type: boolean
        -
          name: exclusiveMinimum
          in: query
          required: false
          schema:
            type: boolean
        -
          name: uniqueItems
          in: query
          required: false
          schema:
            type: boolean
        -
          name: required
          in: query
          required: false
          schema:
            type: boolean
        -
          name: nullable
          in: query
          required: false
          schema:
            type: boolean
        -
          name: readOnly
          in: query
          required: false
          schema:
            type: boolean
        -
          name: writeOnly
          in: query
          required: false
          schema:
            type: boolean
        -
          name: deprecated
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[type]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[format]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[multipleOf]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[maximum]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[exclusiveMaximum]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[minimum]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[exclusiveMinimum]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[maxLength]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[minLength]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[maxItems]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[minItems]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[uniqueItems]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[maxProperties]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[minProperties]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[required]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[enum]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[allOf]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[anyOf]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[oneOf]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[defaultValue]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[nullable]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[readOnly]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[writeOnly]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[example]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[deprecated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[minDate]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[maxDate]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: name
          in: query
          required: false
          schema:
            type: string
        -
          name: 'name[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: type
          in: query
          required: false
          schema:
            type: string
        -
          name: 'type[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: format
          in: query
          required: false
          schema:
            type: string
        -
          name: 'format[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: multipleOf
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'multipleOf[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: maximum
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'maximum[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: exclusiveMaximum
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'exclusiveMaximum[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: minimum
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'minimum[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: exclusiveMinimum
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'exclusiveMinimum[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: maxLength
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'maxLength[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: minLength
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'minLength[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: maxItems
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'maxItems[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: minItems
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'minItems[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: uniqueItems
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'uniqueItems[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: maxProperties
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'maxProperties[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: minProperties
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'minProperties[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: required
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'required[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: enum
          in: query
          required: false
          schema:
            type: string
        -
          name: 'enum[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: allOf
          in: query
          required: false
          schema:
            type: string
        -
          name: 'allOf[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: anyOf
          in: query
          required: false
          schema:
            type: string
        -
          name: 'anyOf[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: oneOf
          in: query
          required: false
          schema:
            type: string
        -
          name: 'oneOf[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: description
          in: query
          required: false
          schema:
            type: string
        -
          name: 'description[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: defaultValue
          in: query
          required: false
          schema:
            type: string
        -
          name: 'defaultValue[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: nullable
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'nullable[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: readOnly
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'readOnly[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: writeOnly
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'writeOnly[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: example
          in: query
          required: false
          schema:
            type: string
        -
          name: 'example[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: deprecated
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'deprecated[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: minDate
          in: query
          required: false
          schema:
            type: string
        -
          name: 'minDate[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: maxDate
          in: query
          required: false
          schema:
            type: string
        -
          name: 'maxDate[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: dateCreated
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: dateModified
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Attribute
      operationId: postAttributeCollection
      summary: 'Creates a Attribute resource.'
      responses:
        201:
          description: 'Attribute resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Attribute:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Attribute:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Attribute-read'
          links:
            GetAttributeItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAttributeItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /attributes/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Attribute:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Attribute:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Attribute-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Attribute-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Attribute-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Attribute-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Attribute-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Attribute-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Attribute-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Attribute-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Attribute-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Attribute-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Attribute-write'
        description: 'The new Attribute resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/attributes/{id}':
    get:
      tags:
        - Attribute
      operationId: getAttributeItem
      summary: 'Retrieves a Attribute resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Attribute resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Attribute:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Attribute:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Attribute-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Attribute
      operationId: putAttributeItem
      summary: 'Replaces the Attribute resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Attribute resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Attribute:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Attribute:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Attribute-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Attribute-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Attribute:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Attribute:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Attribute-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Attribute-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Attribute-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Attribute-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Attribute-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Attribute-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Attribute-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Attribute-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Attribute-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Attribute-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Attribute-write'
        description: 'The updated Attribute resource'
    delete:
      tags:
        - Attribute
      operationId: deleteAttributeItem
      summary: 'Removes the Attribute resource.'
      responses:
        204:
          description: 'Attribute resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  /audit_trails:
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailCollection
      summary: 'Retrieves the collection of AuditTrail resources.'
      responses:
        200:
          description: 'AuditTrail collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      parameters:
        -
          name: 'order[application]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[request]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[user]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[subject]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resource]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[resourceType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[endpoint]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[contentType]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[content]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[session]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: request
          in: query
          required: false
          schema:
            type: string
        -
          name: 'request[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: user
          in: query
          required: false
          schema:
            type: string
        -
          name: 'user[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: subject
          in: query
          required: false
          schema:
            type: string
        -
          name: 'subject[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resource
          in: query
          required: false
          schema:
            type: string
        -
          name: 'resource[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: resourceType
          in: query
          required: false
          schema:
            type: string
        -
          name: endpoint
          in: query
          required: false
          schema:
            type: string
        -
          name: 'endpoint[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: contentType
          in: query
          required: false
          schema:
            type: string
        -
          name: 'contentType[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: content
          in: query
          required: false
          schema:
            type: string
        -
          name: 'content[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: session
          in: query
          required: false
          schema:
            type: string
        -
          name: 'session[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - AuditTrail
      operationId: postAuditTrailCollection
      summary: 'Creates a AuditTrail resource.'
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              parameters:
                id: '$response.body#/id'
              operationId: getAuditTrailItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The new AuditTrail resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/audit_trails/{id}':
    get:
      tags:
        - AuditTrail
      operationId: getAuditTrailItem
      summary: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'AuditTrail resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - AuditTrail
      operationId: deleteAuditTrailItem
      summary: 'Removes the AuditTrail resource.'
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - AuditTrail
      operationId: putAuditTrailItem
      summary: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
    patch:
      tags:
        - AuditTrail
      operationId: patchAuditTrailItem
      summary: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        description: 'The updated AuditTrail resource'
  /change_logs:
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogCollection
      summary: 'Retrieves the collection of ChangeLog resources.'
      responses:
        200:
          description: 'ChangeLog collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      parameters:
        -
          name: 'order[action]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectId]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[objectClass]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[version]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[username]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: action
          in: query
          required: false
          schema:
            type: string
        -
          name: 'action[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectId
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectId[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: objectClass
          in: query
          required: false
          schema:
            type: string
        -
          name: 'objectClass[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: version
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'version[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - ChangeLog
      operationId: postChangeLogCollection
      summary: 'Creates a ChangeLog resource.'
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              parameters:
                id: '$response.body#/id'
              operationId: getChangeLogItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The new ChangeLog resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/change_logs/{id}':
    get:
      tags:
        - ChangeLog
      operationId: getChangeLogItem
      summary: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'ChangeLog resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - ChangeLog
      operationId: deleteChangeLogItem
      summary: 'Removes the ChangeLog resource.'
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - ChangeLog
      operationId: putChangeLogItem
      summary: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
    patch:
      tags:
        - ChangeLog
      operationId: patchChangeLogItem
      summary: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog:jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        description: 'The updated ChangeLog resource'
  /entities:
    get:
      tags:
        - Entity
      operationId: getEntityCollection
      summary: 'Retrieves the collection of Entity resources.'
      responses:
        200:
          description: 'Entity collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Entity:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Entity:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entity-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entity-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entity-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entity-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entity-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entity-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entity-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entity-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entity-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entity-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entity-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[type]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[name]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[description]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateCreated]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateModified]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateCreated[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateCreated[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateModified[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: type
          in: query
          required: false
          schema:
            type: string
        -
          name: 'type[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Entity
      operationId: postEntityCollection
      summary: 'Creates a Entity resource.'
      responses:
        201:
          description: 'Entity resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Entity:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Entity:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Entity-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Entity-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Entity-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Entity-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Entity-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Entity-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Entity-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Entity-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Entity-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Entity-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Entity-read'
          links:
            GetEntityItem:
              parameters:
                id: '$response.body#/id'
              operationId: getEntityItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /entities/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Entity:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Entity:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Entity-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Entity-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Entity-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Entity-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Entity-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Entity-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Entity-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Entity-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Entity-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Entity-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Entity-write'
        description: 'The new Entity resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/entities/{id}':
    get:
      tags:
        - Entity
      operationId: getEntityItem
      summary: 'Retrieves a Entity resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Entity resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Entity:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Entity:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Entity-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Entity-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Entity-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Entity-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Entity-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Entity-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Entity-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Entity-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Entity-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Entity-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Entity-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Entity
      operationId: putEntityItem
      summary: 'Replaces the Entity resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Entity resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Entity:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Entity:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Entity-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Entity-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Entity-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Entity-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Entity-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Entity-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Entity-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Entity-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Entity-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Entity-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Entity-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Entity:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Entity:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Entity-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Entity-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Entity-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Entity-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Entity-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Entity-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Entity-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Entity-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Entity-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Entity-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Entity-write'
        description: 'The updated Entity resource'
    delete:
      tags:
        - Entity
      operationId: deleteEntityItem
      summary: 'Removes the Entity resource.'
      responses:
        204:
          description: 'Entity resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  /object_communications:
    get:
      tags:
        - ObjectCommunication
      operationId: getObjectCommunicationCollection
      summary: 'Retrieves the collection of ObjectCommunication resources.'
      responses:
        200:
          description: 'ObjectCommunication collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ObjectCommunication:jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ObjectCommunication:jsonld' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectCommunication'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectCommunication'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectCommunication'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectCommunication'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectCommunication'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectCommunication'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectCommunication'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectCommunication'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectCommunication'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectCommunication'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectCommunication'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - ObjectCommunication
      operationId: postObjectCommunicationCollection
      summary: 'Creates a ObjectCommunication resource.'
      responses:
        201:
          description: 'ObjectCommunication resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ObjectCommunication:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ObjectCommunication:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/xml:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            text/csv:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            text/html:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
          links:
            GetObjectCommunicationItem:
              parameters:
                id: '$response.body#/id'
              operationId: getObjectCommunicationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /object_communications/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ObjectCommunication:jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ObjectCommunication:jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          application/xml:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          text/csv:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          text/html:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
        description: 'The new ObjectCommunication resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/object_communications/{id}':
    get:
      tags:
        - ObjectCommunication
      operationId: getObjectCommunicationItem
      summary: 'Retrieves a ObjectCommunication resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'ObjectCommunication resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ObjectCommunication:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ObjectCommunication:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/xml:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            text/csv:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            text/html:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - ObjectCommunication
      operationId: deleteObjectCommunicationItem
      summary: 'Removes the ObjectCommunication resource.'
      responses:
        204:
          description: 'ObjectCommunication resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - ObjectCommunication
      operationId: putObjectCommunicationItem
      summary: 'Replaces the ObjectCommunication resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ObjectCommunication resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ObjectCommunication:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ObjectCommunication:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/xml:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            text/csv:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            text/html:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ObjectCommunication:jsonld'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ObjectCommunication:jsonld'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          application/xml:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          text/csv:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          text/html:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
        description: 'The updated ObjectCommunication resource'
    patch:
      tags:
        - ObjectCommunication
      operationId: patchObjectCommunicationItem
      summary: 'Updates the ObjectCommunication resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ObjectCommunication resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ObjectCommunication:jsonld'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ObjectCommunication:jsonld'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/xml:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            text/csv:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
            text/html:
              schema:
                $ref: '#/components/schemas/ObjectCommunication'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ObjectCommunication:jsonld'
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          application/xml:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          text/csv:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
          text/html:
            schema:
              $ref: '#/components/schemas/ObjectCommunication'
        description: 'The updated ObjectCommunication resource'
  /object_entities:
    get:
      tags:
        - ObjectEntity
      operationId: getObjectEntityCollection
      summary: 'Retrieves the collection of ObjectEntity resources.'
      responses:
        200:
          description: 'ObjectEntity collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ObjectEntity:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ObjectEntity:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[uri]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: uri
          in: query
          required: false
          schema:
            type: string
        -
          name: 'uri[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - ObjectEntity
      operationId: postObjectEntityCollection
      summary: 'Creates a ObjectEntity resource.'
      responses:
        201:
          description: 'ObjectEntity resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ObjectEntity:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ObjectEntity:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
          links:
            GetObjectEntityItem:
              parameters:
                id: '$response.body#/id'
              operationId: getObjectEntityItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /object_entities/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ObjectEntity:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ObjectEntity:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
        description: 'The new ObjectEntity resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/object_entities/{component}/{entity}':
    get:
      tags:
        - ObjectEntity
      operationId: get_uriobjectentityObjectEntityCollection
      summary: 'Retrieves the collection of ObjectEntity resources.'
      responses:
        200:
          description: 'ObjectEntity collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ObjectEntity:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ObjectEntity:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[uri]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: uri
          in: query
          required: false
          schema:
            type: string
        -
          name: 'uri[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - ObjectEntity
      operationId: post_objectentityObjectEntityCollection
      summary: 'Creates a ObjectEntity resource.'
      responses:
        201:
          description: 'ObjectEntity resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ObjectEntity:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ObjectEntity:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
          links:
            GetObjectEntityItem:
              parameters:
                id: '$response.body#/id'
              operationId: getObjectEntityItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /object_entities/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ObjectEntity:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ObjectEntity:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
        description: 'The new ObjectEntity resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/object_entities/{component}/{entity}/{uuid}':
    get:
      tags:
        - ObjectEntity
      operationId: get_objectentityObjectEntityCollection
      summary: 'Retrieves the collection of ObjectEntity resources.'
      responses:
        200:
          description: 'ObjectEntity collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ObjectEntity:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ObjectEntity:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectEntity-read'
      parameters:
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[uri]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: uri
          in: query
          required: false
          schema:
            type: string
        -
          name: 'uri[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - ObjectEntity
      operationId: post_putobjectentityObjectEntityCollection
      summary: 'Creates a ObjectEntity resource.'
      responses:
        201:
          description: 'ObjectEntity resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ObjectEntity:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ObjectEntity:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
          links:
            GetObjectEntityItem:
              parameters:
                id: '$response.body#/id'
              operationId: getObjectEntityItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /object_entities/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ObjectEntity:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ObjectEntity:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
        description: 'The new ObjectEntity resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/object_entities/{id}':
    get:
      tags:
        - ObjectEntity
      operationId: getObjectEntityItem
      summary: 'Retrieves a ObjectEntity resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'ObjectEntity resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ObjectEntity:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ObjectEntity:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - ObjectEntity
      operationId: putObjectEntityItem
      summary: 'Replaces the ObjectEntity resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'ObjectEntity resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ObjectEntity:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ObjectEntity:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ObjectEntity-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ObjectEntity:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ObjectEntity:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ObjectEntity-write'
        description: 'The updated ObjectEntity resource'
    delete:
      tags:
        - ObjectEntity
      operationId: deleteObjectEntityItem
      summary: 'Removes the ObjectEntity resource.'
      responses:
        204:
          description: 'ObjectEntity resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  /values:
    get:
      tags:
        - Value
      operationId: getValueCollection
      summary: 'Retrieves the collection of Value resources.'
      responses:
        200:
          description: 'Value collection response'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Value:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Value:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Value-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Value-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Value-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Value-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Value-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Value-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Value-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Value-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Value-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Value-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Value-read'
      parameters:
        -
          name: booleanValue
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'order[id]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[uri]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[value]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[integerValue]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[booleanValue]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[arrayValue]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'order[dateTimeValue]'
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
        -
          name: 'dateTimeValue[before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateTimeValue[strictly_before]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateTimeValue[after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateTimeValue[strictly_after]'
          in: query
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          required: false
          schema:
            type: string
        -
          name: 'id[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: uri
          in: query
          required: false
          schema:
            type: string
        -
          name: 'uri[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: value
          in: query
          required: false
          schema:
            type: string
        -
          name: 'value[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: integerValue
          in: query
          required: false
          schema:
            type: integer
        -
          name: 'integerValue[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
        -
          name: booleanValue
          in: query
          required: false
          schema:
            type: boolean
        -
          name: 'booleanValue[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: boolean
          style: form
          explode: true
        -
          name: arrayValue
          in: query
          required: false
          schema:
            type: string
        -
          name: 'arrayValue[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: deepObject
          explode: true
        -
          name: dateTimeValue
          in: query
          required: false
          schema:
            type: string
        -
          name: 'dateTimeValue[]'
          in: query
          required: false
          schema:
            type: string
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: limit
          in: query
          required: false
          description: 'The number of items per page'
          schema:
            type: integer
            default: 30
            minimum: 0
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Value
      operationId: postValueCollection
      summary: 'Creates a Value resource.'
      responses:
        201:
          description: 'Value resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Value:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Value:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Value-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Value-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Value-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Value-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Value-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Value-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Value-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Value-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Value-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Value-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Value-read'
          links:
            GetValueItem:
              parameters:
                id: '$response.body#/id'
              operationId: getValueItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /values/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Value:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Value:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Value-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Value-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Value-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Value-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Value-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Value-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Value-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Value-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Value-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Value-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Value-write'
        description: 'The new Value resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/values/{id}':
    get:
      tags:
        - Value
      operationId: getValueItem
      summary: 'Retrieves a Value resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Value resource response'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Value:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Value:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Value-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Value-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Value-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Value-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Value-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Value-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Value-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Value-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Value-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Value-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Value-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    put:
      tags:
        - Value
      operationId: putValueItem
      summary: 'Replaces the Value resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Value resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Value:jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Value:jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Value-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Value-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Value-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Value-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Value-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Value-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Value-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Value-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Value-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Value-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Value-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Value:jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Value:jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Value-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Value-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Value-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Value-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Value-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Value-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Value-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Value-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Value-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Value-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Value-write'
        description: 'The updated Value resource'
    delete:
      tags:
        - Value
      operationId: deleteValueItem
      summary: 'Removes the Value resource.'
      responses:
        204:
          description: 'Value resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
components:
  schemas:
    Attribute-read:
      type: object
      description: Description
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of the property as used in api calls'
          type: string
          nullable: true
        type:
          description: 'The type of this property'
          type: string
          nullable: true
        format:
          description: 'The swagger type of the property as used in api calls'
          type: string
          nullable: true
        entity:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Entity-read'
        attributeValues:
          type: array
          items:
            $ref: '#/components/schemas/Value-read'
        multipleOf:
          description: '*Can only be used in combination with type integer* Specifies a number where the value should be a multiple of, e.g. a multiple of 2 would validate 2,4 and 6 but would prevent 5'
          type: integer
          nullable: true
        maximum:
          description: '*Can only be used in combination with type integer* The maximum allowed value'
          type: integer
          nullable: true
        exclusiveMaximum:
          description: '*Can only be used in combination with type integer* Defines if the maximum is exclusive, e.g. a exclusive maximum of 5 would invalidate 5 but validate 4'
          type: boolean
          nullable: true
        minimum:
          description: '*Can only be used in combination with type integer* The minimum allowed value'
          type: integer
          nullable: true
        exclusiveMinimum:
          description: '*Can only be used in combination with type integer* Defines if the minimum is exclusive, e.g. a exclusive minimum of 5 would invalidate 5 but validate 6'
          type: boolean
          nullable: true
        maxLength:
          description: 'The maximum amount of characters in the value'
          type: integer
          nullable: true
        minLength:
          description: 'The minimal amount of characters in the value'
          type: integer
          nullable: true
        maxItems:
          description: '*Can only be used in combination with type array* The maximum array length'
          type: integer
          nullable: true
        minItems:
          description: '*Can only be used in combination with type array* The minimum array length'
          type: integer
          nullable: true
        uniqueItems:
          description: '*Can only be used in combination with type array* Define whether or not values in an array should be unique'
          type: boolean
          nullable: true
        maxProperties:
          description: '*Can only be used in combination with type object* The maximum amount of properties an object should contain'
          type: integer
          nullable: true
        minProperties:
          description: '*Can only be used in combination with type object* The minimum amount of properties an object should contain'
          type: integer
          nullable: true
        required:
          description: 'Only whether or not this property is required'
          type: boolean
          nullable: true
        enum:
          description: 'An array of possible values, input is limited to this array]'
          type: array
          items:
            type: string
          nullable: true
        description:
          description: 'An description of the value asked, supports markdown syntax as described by [CommonMark 0.27.](https://spec.commonmark.org/0.27/)'
          type: string
          nullable: true
        defaultValue:
          description: 'An default value for this value that will be used if a user doesn''t supply a value'
          type: string
          nullable: true
        nullable:
          description: 'Whether or not this property can be left empty'
          type: boolean
          nullable: true
        readOnly:
          description: 'Whether or not this property is read only'
          type: boolean
          nullable: true
        writeOnly:
          description: 'Whether or not this property is write only'
          type: boolean
          nullable: true
        example:
          description: 'An example of the value that should be supplied'
          type: string
          nullable: true
        deprecated:
          description: 'Whether or not this property has been deprecated and wil be removed in the future'
          type: boolean
          nullable: true
        minDate:
          description: 'The minimal date for value, either a date, datetime or duration (ISO_8601)'
          type: string
          nullable: true
        maxDate:
          description: 'The maximum date for value, either a date, datetime or duration (ISO_8601)'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - type
        - format
    Attribute-write:
      type: object
      description: Description
      required:
        - name
        - type
        - format
      properties:
        name:
          description: 'The name of the property as used in api calls'
          type: string
          nullable: true
        type:
          description: 'The type of this property'
          type: string
          nullable: true
        format:
          description: 'The swagger type of the property as used in api calls'
          type: string
          nullable: true
        entity:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Entity-write'
        attributeValues:
          type: array
          items:
            $ref: '#/components/schemas/Value-write'
        multipleOf:
          description: '*Can only be used in combination with type integer* Specifies a number where the value should be a multiple of, e.g. a multiple of 2 would validate 2,4 and 6 but would prevent 5'
          type: integer
          nullable: true
        maximum:
          description: '*Can only be used in combination with type integer* The maximum allowed value'
          type: integer
          nullable: true
        exclusiveMaximum:
          description: '*Can only be used in combination with type integer* Defines if the maximum is exclusive, e.g. a exclusive maximum of 5 would invalidate 5 but validate 4'
          type: boolean
          nullable: true
        minimum:
          description: '*Can only be used in combination with type integer* The minimum allowed value'
          type: integer
          nullable: true
        exclusiveMinimum:
          description: '*Can only be used in combination with type integer* Defines if the minimum is exclusive, e.g. a exclusive minimum of 5 would invalidate 5 but validate 6'
          type: boolean
          nullable: true
        maxLength:
          description: 'The maximum amount of characters in the value'
          type: integer
          nullable: true
        minLength:
          description: 'The minimal amount of characters in the value'
          type: integer
          nullable: true
        maxItems:
          description: '*Can only be used in combination with type array* The maximum array length'
          type: integer
          nullable: true
        minItems:
          description: '*Can only be used in combination with type array* The minimum array length'
          type: integer
          nullable: true
        uniqueItems:
          description: '*Can only be used in combination with type array* Define whether or not values in an array should be unique'
          type: boolean
          nullable: true
        maxProperties:
          description: '*Can only be used in combination with type object* The maximum amount of properties an object should contain'
          type: integer
          nullable: true
        minProperties:
          description: '*Can only be used in combination with type object* The minimum amount of properties an object should contain'
          type: integer
          nullable: true
        required:
          description: 'Only whether or not this property is required'
          type: boolean
          nullable: true
        enum:
          description: 'An array of possible values, input is limited to this array]'
          type: array
          items:
            type: string
          nullable: true
        description:
          description: 'An description of the value asked, supports markdown syntax as described by [CommonMark 0.27.](https://spec.commonmark.org/0.27/)'
          type: string
          nullable: true
        defaultValue:
          description: 'An default value for this value that will be used if a user doesn''t supply a value'
          type: string
          nullable: true
        nullable:
          description: 'Whether or not this property can be left empty'
          type: boolean
          nullable: true
        readOnly:
          description: 'Whether or not this property is read only'
          type: boolean
          nullable: true
        writeOnly:
          description: 'Whether or not this property is write only'
          type: boolean
          nullable: true
        example:
          description: 'An example of the value that should be supplied'
          type: string
          nullable: true
        deprecated:
          description: 'Whether or not this property has been deprecated and wil be removed in the future'
          type: boolean
          nullable: true
        minDate:
          description: 'The minimal date for value, either a date, datetime or duration (ISO_8601)'
          type: string
          nullable: true
        maxDate:
          description: 'The maximum date for value, either a date, datetime or duration (ISO_8601)'
          type: string
          nullable: true
    'Attribute:jsonld-read':
      type: object
      description: Description
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        name:
          description: 'The name of the property as used in api calls'
          type: string
          nullable: true
        type:
          description: 'The type of this property'
          type: string
          nullable: true
        format:
          description: 'The swagger type of the property as used in api calls'
          type: string
          nullable: true
        entity:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Entity:jsonld-read'
        attributeValues:
          type: array
          items:
            $ref: '#/components/schemas/Value:jsonld-read'
        multipleOf:
          description: '*Can only be used in combination with type integer* Specifies a number where the value should be a multiple of, e.g. a multiple of 2 would validate 2,4 and 6 but would prevent 5'
          type: integer
          nullable: true
        maximum:
          description: '*Can only be used in combination with type integer* The maximum allowed value'
          type: integer
          nullable: true
        exclusiveMaximum:
          description: '*Can only be used in combination with type integer* Defines if the maximum is exclusive, e.g. a exclusive maximum of 5 would invalidate 5 but validate 4'
          type: boolean
          nullable: true
        minimum:
          description: '*Can only be used in combination with type integer* The minimum allowed value'
          type: integer
          nullable: true
        exclusiveMinimum:
          description: '*Can only be used in combination with type integer* Defines if the minimum is exclusive, e.g. a exclusive minimum of 5 would invalidate 5 but validate 6'
          type: boolean
          nullable: true
        maxLength:
          description: 'The maximum amount of characters in the value'
          type: integer
          nullable: true
        minLength:
          description: 'The minimal amount of characters in the value'
          type: integer
          nullable: true
        maxItems:
          description: '*Can only be used in combination with type array* The maximum array length'
          type: integer
          nullable: true
        minItems:
          description: '*Can only be used in combination with type array* The minimum array length'
          type: integer
          nullable: true
        uniqueItems:
          description: '*Can only be used in combination with type array* Define whether or not values in an array should be unique'
          type: boolean
          nullable: true
        maxProperties:
          description: '*Can only be used in combination with type object* The maximum amount of properties an object should contain'
          type: integer
          nullable: true
        minProperties:
          description: '*Can only be used in combination with type object* The minimum amount of properties an object should contain'
          type: integer
          nullable: true
        required:
          description: 'Only whether or not this property is required'
          type: boolean
          nullable: true
        enum:
          description: 'An array of possible values, input is limited to this array]'
          type: array
          items:
            type: string
          nullable: true
        description:
          description: 'An description of the value asked, supports markdown syntax as described by [CommonMark 0.27.](https://spec.commonmark.org/0.27/)'
          type: string
          nullable: true
        defaultValue:
          description: 'An default value for this value that will be used if a user doesn''t supply a value'
          type: string
          nullable: true
        nullable:
          description: 'Whether or not this property can be left empty'
          type: boolean
          nullable: true
        readOnly:
          description: 'Whether or not this property is read only'
          type: boolean
          nullable: true
        writeOnly:
          description: 'Whether or not this property is write only'
          type: boolean
          nullable: true
        example:
          description: 'An example of the value that should be supplied'
          type: string
          nullable: true
        deprecated:
          description: 'Whether or not this property has been deprecated and wil be removed in the future'
          type: boolean
          nullable: true
        minDate:
          description: 'The minimal date for value, either a date, datetime or duration (ISO_8601)'
          type: string
          nullable: true
        maxDate:
          description: 'The maximum date for value, either a date, datetime or duration (ISO_8601)'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
        - type
        - format
    'Attribute:jsonld-write':
      type: object
      description: Description
      required:
        - name
        - type
        - format
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of the property as used in api calls'
          type: string
          nullable: true
        type:
          description: 'The type of this property'
          type: string
          nullable: true
        format:
          description: 'The swagger type of the property as used in api calls'
          type: string
          nullable: true
        entity:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Entity:jsonld-write'
        attributeValues:
          type: array
          items:
            $ref: '#/components/schemas/Value:jsonld-write'
        multipleOf:
          description: '*Can only be used in combination with type integer* Specifies a number where the value should be a multiple of, e.g. a multiple of 2 would validate 2,4 and 6 but would prevent 5'
          type: integer
          nullable: true
        maximum:
          description: '*Can only be used in combination with type integer* The maximum allowed value'
          type: integer
          nullable: true
        exclusiveMaximum:
          description: '*Can only be used in combination with type integer* Defines if the maximum is exclusive, e.g. a exclusive maximum of 5 would invalidate 5 but validate 4'
          type: boolean
          nullable: true
        minimum:
          description: '*Can only be used in combination with type integer* The minimum allowed value'
          type: integer
          nullable: true
        exclusiveMinimum:
          description: '*Can only be used in combination with type integer* Defines if the minimum is exclusive, e.g. a exclusive minimum of 5 would invalidate 5 but validate 6'
          type: boolean
          nullable: true
        maxLength:
          description: 'The maximum amount of characters in the value'
          type: integer
          nullable: true
        minLength:
          description: 'The minimal amount of characters in the value'
          type: integer
          nullable: true
        maxItems:
          description: '*Can only be used in combination with type array* The maximum array length'
          type: integer
          nullable: true
        minItems:
          description: '*Can only be used in combination with type array* The minimum array length'
          type: integer
          nullable: true
        uniqueItems:
          description: '*Can only be used in combination with type array* Define whether or not values in an array should be unique'
          type: boolean
          nullable: true
        maxProperties:
          description: '*Can only be used in combination with type object* The maximum amount of properties an object should contain'
          type: integer
          nullable: true
        minProperties:
          description: '*Can only be used in combination with type object* The minimum amount of properties an object should contain'
          type: integer
          nullable: true
        required:
          description: 'Only whether or not this property is required'
          type: boolean
          nullable: true
        enum:
          description: 'An array of possible values, input is limited to this array]'
          type: array
          items:
            type: string
          nullable: true
        description:
          description: 'An description of the value asked, supports markdown syntax as described by [CommonMark 0.27.](https://spec.commonmark.org/0.27/)'
          type: string
          nullable: true
        defaultValue:
          description: 'An default value for this value that will be used if a user doesn''t supply a value'
          type: string
          nullable: true
        nullable:
          description: 'Whether or not this property can be left empty'
          type: boolean
          nullable: true
        readOnly:
          description: 'Whether or not this property is read only'
          type: boolean
          nullable: true
        writeOnly:
          description: 'Whether or not this property is write only'
          type: boolean
          nullable: true
        example:
          description: 'An example of the value that should be supplied'
          type: string
          nullable: true
        deprecated:
          description: 'Whether or not this property has been deprecated and wil be removed in the future'
          type: boolean
          nullable: true
        minDate:
          description: 'The minimal date for value, either a date, datetime or duration (ISO_8601)'
          type: string
          nullable: true
        maxDate:
          description: 'The maximum date for value, either a date, datetime or duration (ISO_8601)'
          type: string
          nullable: true
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    'AuditTrail:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        application:
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          description: '???'
          type: string
          nullable: true
        process:
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'AuditTrail:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    'ChangeLog:jsonld-read':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
          format: uuid
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    'ChangeLog:jsonld-write':
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Entity-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this Entity.'
          type: string
          format: uuid
        type:
          description: 'The type of this Entity'
          type: string
        name:
          description: 'The name of this Entity'
          type: string
        description:
          description: 'The description of this Entity'
          type: string
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute-read'
        objectEntities:
          type: array
          items:
            $ref: '#/components/schemas/ObjectEntity-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - type
        - name
    Entity-write:
      type: object
      description: ''
      required:
        - type
        - name
      properties:
        type:
          description: 'The type of this Entity'
          type: string
        name:
          description: 'The name of this Entity'
          type: string
        description:
          description: 'The description of this Entity'
          type: string
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute-write'
        objectEntities:
          type: array
          items:
            $ref: '#/components/schemas/ObjectEntity-write'
    'Entity:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this Entity.'
          type: string
          format: uuid
        type:
          description: 'The type of this Entity'
          type: string
        name:
          description: 'The name of this Entity'
          type: string
        description:
          description: 'The description of this Entity'
          type: string
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute:jsonld-read'
        objectEntities:
          type: array
          items:
            $ref: '#/components/schemas/ObjectEntity:jsonld-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - type
        - name
    'Entity:jsonld-write':
      type: object
      description: ''
      required:
        - type
        - name
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        type:
          description: 'The type of this Entity'
          type: string
        name:
          description: 'The name of this Entity'
          type: string
        description:
          description: 'The description of this Entity'
          type: string
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute:jsonld-write'
        objectEntities:
          type: array
          items:
            $ref: '#/components/schemas/ObjectEntity:jsonld-write'
    ObjectCommunication:
      type: object
      description: Description
      properties:
        id:
          readOnly: true
          description: 'UUID of this person'
          type: string
          format: uuid
        componentCode:
          description: '(get, post and put) The component code for the objectEntity we are getting, creating or updating'
          type: string
        entityName:
          description: '(get, post and put) The entity name for the objectEntity we are getting, creating or updating. (this actually needs to be the second value of the entity type, so in case of entity type: cc/people, this would/should be people)'
          type: string
        objectEntityId:
          description: '(get or put) The uuid of the objectEntity we are getting or updating'
          type: string
        self:
          description: '(get, post or put) The url of the extern object that has an Entity with Attributes in EAV. That we are getting, updating or creating a new EAV objectEntity for'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        body:
          description: '(post or put) The values for creating or updating an extern object and the values for the Entity with Attributes in EAV for this extern object.'
          type: array
          items:
            type: string
          nullable: true
        doGet:
          description: 'If you want to do a get call through a post for some weird reason, use this boolean and set it to True'
          type: boolean
          nullable: true
    'ObjectCommunication:jsonld':
      type: object
      description: Description
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'UUID of this person'
          type: string
          format: uuid
        componentCode:
          description: '(get, post and put) The component code for the objectEntity we are getting, creating or updating'
          type: string
        entityName:
          description: '(get, post and put) The entity name for the objectEntity we are getting, creating or updating. (this actually needs to be the second value of the entity type, so in case of entity type: cc/people, this would/should be people)'
          type: string
        objectEntityId:
          description: '(get or put) The uuid of the objectEntity we are getting or updating'
          type: string
        self:
          description: '(get, post or put) The url of the extern object that has an Entity with Attributes in EAV. That we are getting, updating or creating a new EAV objectEntity for'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        body:
          description: '(post or put) The values for creating or updating an extern object and the values for the Entity with Attributes in EAV for this extern object.'
          type: array
          items:
            type: string
          nullable: true
        doGet:
          description: 'If you want to do a get call through a post for some weird reason, use this boolean and set it to True'
          type: boolean
          nullable: true
    ObjectEntity-read:
      type: object
      description: Description
      properties:
        id:
          readOnly: true
          description: 'UUID of this person'
          type: string
          format: uuid
        uri:
          description: 'An uri'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        entity:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Entity-read'
        objectValues:
          type: array
          items:
            $ref: '#/components/schemas/Value-read'
    ObjectEntity-write:
      type: object
      description: Description
      properties:
        uri:
          description: 'An uri'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        entity:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Entity-write'
        objectValues:
          type: array
          items:
            $ref: '#/components/schemas/Value-write'
    'ObjectEntity:jsonld-read':
      type: object
      description: Description
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'UUID of this person'
          type: string
          format: uuid
        uri:
          description: 'An uri'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        entity:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Entity:jsonld-read'
        objectValues:
          type: array
          items:
            $ref: '#/components/schemas/Value:jsonld-read'
    'ObjectEntity:jsonld-write':
      type: object
      description: Description
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        uri:
          description: 'An uri'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        entity:
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Entity:jsonld-write'
        objectValues:
          type: array
          items:
            $ref: '#/components/schemas/Value:jsonld-write'
    Value-read:
      type: object
      description: Description.
      properties:
        id:
          readOnly: true
          description: 'UUID of this person'
          type: string
          format: uuid
        uri:
          description: 'An uri'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        value:
          description: 'The actual value'
          type: string
          nullable: true
        integerValue:
          description: 'Integer if the value is type integer'
          type: integer
          nullable: true
        booleanValue:
          description: 'Boolean if the value is type boolean'
          type: boolean
          nullable: true
        arrayValue:
          description: 'Array if the value is type array'
          type: array
          items:
            type: string
          nullable: true
        dateTimeValue:
          description: 'DateTime if the value is type DateTime'
          type: string
          format: date-time
          nullable: true
        attribute:
          $ref: '#/components/schemas/Attribute-read'
        objectEntity:
          $ref: '#/components/schemas/ObjectEntity-read'
    Value-write:
      type: object
      description: Description.
      properties:
        uri:
          description: 'An uri'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        value:
          description: 'The actual value'
          type: string
          nullable: true
        integerValue:
          description: 'Integer if the value is type integer'
          type: integer
          nullable: true
        booleanValue:
          description: 'Boolean if the value is type boolean'
          type: boolean
          nullable: true
        arrayValue:
          description: 'Array if the value is type array'
          type: array
          items:
            type: string
          nullable: true
        dateTimeValue:
          description: 'DateTime if the value is type DateTime'
          type: string
          format: date-time
          nullable: true
        attribute:
          $ref: '#/components/schemas/Attribute-write'
        objectEntity:
          $ref: '#/components/schemas/ObjectEntity-write'
    'Value:jsonld-read':
      type: object
      description: Description.
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'UUID of this person'
          type: string
          format: uuid
        uri:
          description: 'An uri'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        value:
          description: 'The actual value'
          type: string
          nullable: true
        integerValue:
          description: 'Integer if the value is type integer'
          type: integer
          nullable: true
        booleanValue:
          description: 'Boolean if the value is type boolean'
          type: boolean
          nullable: true
        arrayValue:
          description: 'Array if the value is type array'
          type: array
          items:
            type: string
          nullable: true
        dateTimeValue:
          description: 'DateTime if the value is type DateTime'
          type: string
          format: date-time
          nullable: true
        attribute:
          $ref: '#/components/schemas/Attribute:jsonld-read'
        objectEntity:
          $ref: '#/components/schemas/ObjectEntity:jsonld-read'
    'Value:jsonld-write':
      type: object
      description: Description.
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        uri:
          description: 'An uri'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        value:
          description: 'The actual value'
          type: string
          nullable: true
        integerValue:
          description: 'Integer if the value is type integer'
          type: integer
          nullable: true
        booleanValue:
          description: 'Boolean if the value is type boolean'
          type: boolean
          nullable: true
        arrayValue:
          description: 'Array if the value is type array'
          type: array
          items:
            type: string
          nullable: true
        dateTimeValue:
          description: 'DateTime if the value is type DateTime'
          type: string
          format: date-time
          nullable: true
        attribute:
          $ref: '#/components/schemas/Attribute:jsonld-write'
        objectEntity:
          $ref: '#/components/schemas/ObjectEntity:jsonld-write'
definitions:
  Attribute-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of the property as used in api calls'
        type: string
        example: my_property
        maxLength: 255
      type:
        description: 'The type of this property'
        type: string
        example: string
        maxLength: 255
      format:
        description: 'The swagger type of the property as used in api calls'
        type: string
        example: string
        maxLength: 255
      multipleOf:
        description: '*Can only be used in combination with type integer* Specifies a number where the value should be a multiple of, e.g. a multiple of 2 would validate 2,4 and 6 but would prevent 5'
        type: string
        example: '2'
      maximum:
        description: '*Can only be used in combination with type integer* The maximum allowed value'
        type: string
        example: '2'
      exclusiveMaximum:
        description: '*Can only be used in combination with type integer* Defines if the maximum is exclusive, e.g. a exclusive maximum of 5 would invalidate 5 but validate 4'
        type: string
        example: 'true'
      minimum:
        description: '*Can only be used in combination with type integer* The minimum allowed value'
        type: string
        example: '2'
      exclusiveMinimum:
        description: '*Can only be used in combination with type integer* Defines if the minimum is exclusive, e.g. a exclusive minimum of 5 would invalidate 5 but validate 6'
        type: string
        example: 'true'
      maxLength:
        description: 'The maximum amount of characters in the value'
        type: string
        example: '2'
      minLength:
        description: 'The minimal amount of characters in the value'
        type: int
        example: '2'
      maxItems:
        description: '*Can only be used in combination with type array* The maximum array length'
        type: string
        example: '2'
      minItems:
        description: '*Can only be used in combination with type array* The minimum array length'
        type: string
        example: '2'
      uniqueItems:
        description: '*Can only be used in combination with type array* Define whether or not values in an array should be unique'
        type: bool
        example: 'false'
      maxProperties:
        description: '*Can only be used in combination with type object* The maximum amount of properties an object should contain'
        type: string
        example: '2'
      minProperties:
        description: '*Can only be used in combination with type object* The minimum amount of properties an object should contain'
        type: int
        example: '2'
      required:
        description: 'Only whether or not this property is required'
        type: bool
        example: 'false'
      enum:
        description: 'An array of possible values, input is limited to this array]'
        type: array
      description:
        description: 'An description of the value asked, supports markdown syntax as described by [CommonMark 0.27.](https://spec.commonmark.org/0.27/)'
        type: string
        example: 'My value'
      defaultValue:
        description: 'An default value for this value that will be used if a user doesn''t supply a value'
        type: string
        example: 'My value'
        maxLength: 255
      nullable:
        description: 'Whether or not this property can be left empty'
        type: bool
        example: 'false'
      readOnly:
        description: 'Whether or not this property is read only'
        type: bool
        example: 'false'
      writeOnly:
        description: 'Whether or not this property is write only'
        type: bool
        example: 'false'
      example:
        description: 'An example of the value that should be supplied'
        type: string
        example: 'My value'
        maxLength: 255
      deprecated:
        description: 'Whether or not this property has been deprecated and wil be removed in the future'
        type: bool
        example: 'false'
      minDate:
        description: 'The minimal date for value, either a date, datetime or duration (ISO_8601)'
        type: string
        example: '2019-09-16T14:26:51+00:00'
      maxDate:
        description: 'The maximum date for value, either a date, datetime or duration (ISO_8601)'
        type: string
        example: '2019-09-16T14:26:51+00:00'
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      entity: []
      attributeValues: []
    required:
      - name
  Attribute-write:
    properties:
      name:
        description: 'The name of the property as used in api calls'
        type: string
        example: my_property
        maxLength: 255
      type:
        description: 'The type of this property'
        type: string
        example: string
        maxLength: 255
      format:
        description: 'The swagger type of the property as used in api calls'
        type: string
        example: string
        maxLength: 255
      multipleOf:
        description: '*Can only be used in combination with type integer* Specifies a number where the value should be a multiple of, e.g. a multiple of 2 would validate 2,4 and 6 but would prevent 5'
        type: string
        example: '2'
      maximum:
        description: '*Can only be used in combination with type integer* The maximum allowed value'
        type: string
        example: '2'
      exclusiveMaximum:
        description: '*Can only be used in combination with type integer* Defines if the maximum is exclusive, e.g. a exclusive maximum of 5 would invalidate 5 but validate 4'
        type: string
        example: 'true'
      minimum:
        description: '*Can only be used in combination with type integer* The minimum allowed value'
        type: string
        example: '2'
      exclusiveMinimum:
        description: '*Can only be used in combination with type integer* Defines if the minimum is exclusive, e.g. a exclusive minimum of 5 would invalidate 5 but validate 6'
        type: string
        example: 'true'
      maxLength:
        description: 'The maximum amount of characters in the value'
        type: string
        example: '2'
      minLength:
        description: 'The minimal amount of characters in the value'
        type: int
        example: '2'
      maxItems:
        description: '*Can only be used in combination with type array* The maximum array length'
        type: string
        example: '2'
      minItems:
        description: '*Can only be used in combination with type array* The minimum array length'
        type: string
        example: '2'
      uniqueItems:
        description: '*Can only be used in combination with type array* Define whether or not values in an array should be unique'
        type: bool
        example: 'false'
      maxProperties:
        description: '*Can only be used in combination with type object* The maximum amount of properties an object should contain'
        type: string
        example: '2'
      minProperties:
        description: '*Can only be used in combination with type object* The minimum amount of properties an object should contain'
        type: int
        example: '2'
      required:
        description: 'Only whether or not this property is required'
        type: bool
        example: 'false'
      enum:
        description: 'An array of possible values, input is limited to this array]'
        type: array
      description:
        description: 'An description of the value asked, supports markdown syntax as described by [CommonMark 0.27.](https://spec.commonmark.org/0.27/)'
        type: string
        example: 'My value'
      defaultValue:
        description: 'An default value for this value that will be used if a user doesn''t supply a value'
        type: string
        example: 'My value'
        maxLength: 255
      nullable:
        description: 'Whether or not this property can be left empty'
        type: bool
        example: 'false'
      readOnly:
        description: 'Whether or not this property is read only'
        type: bool
        example: 'false'
      writeOnly:
        description: 'Whether or not this property is write only'
        type: bool
        example: 'false'
      example:
        description: 'An example of the value that should be supplied'
        type: string
        example: 'My value'
        maxLength: 255
      deprecated:
        description: 'Whether or not this property has been deprecated and wil be removed in the future'
        type: bool
        example: 'false'
      minDate:
        description: 'The minimal date for value, either a date, datetime or duration (ISO_8601)'
        type: string
        example: '2019-09-16T14:26:51+00:00'
      maxDate:
        description: 'The maximum date for value, either a date, datetime or duration (ISO_8601)'
        type: string
        example: '2019-09-16T14:26:51+00:00'
      entity: []
      attributeValues: []
    required:
      - name
  Entity-read:
    properties:
      id:
        description: 'The UUID identifier of this Entity.'
        type: \UuidInterface
      type:
        description: 'The type of this Entity'
        type: string
        maxLength: 255
      name:
        description: 'The name of this Entity'
        type: string
        maxLength: 255
      description:
        description: 'The description of this Entity'
        type: string
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      attributes: []
      objectEntities: []
    required:
      - type
      - name
  Entity-write:
    properties:
      type:
        description: 'The type of this Entity'
        type: string
        maxLength: 255
      name:
        description: 'The name of this Entity'
        type: string
        maxLength: 255
      description:
        description: 'The description of this Entity'
        type: string
        maxLength: 255
      attributes: []
      objectEntities: []
    required:
      - type
      - name
  ObjectCommunication-read:
    properties:
      id:
        description: 'UUID of this person'
        type: \UuidInterface
      componentCode:
        description: '(get, post and put) The component code for the objectEntity we are getting, creating or updating'
        type: string
      entityName:
        description: '(get, post and put) The entity name for the objectEntity we are getting, creating or updating. (this actually needs to be the second value of the entity type, so in case of entity type: cc/people, this would/should be people)'
        type: string
      objectEntityId:
        description: '(get or put) The uuid of the objectEntity we are getting or updating'
        type: string
      self:
        description: '(get, post or put) The url of the extern object that has an Entity with Attributes in EAV. That we are getting, updating or creating a new EAV objectEntity for'
        type: string
        format: url
      body:
        description: '(post or put) The values for creating or updating an extern object and the values for the Entity with Attributes in EAV for this extern object.'
        type: array
      doGet:
        description: 'If you want to do a get call through a post for some weird reason, use this boolean and set it to True'
        type: bool
        example: 'false'
    required: []
  ObjectEntity-read:
    properties:
      id:
        description: 'UUID of this person'
        type: \UuidInterface
      uri:
        description: 'An uri'
        type: string
        format: url
      entity: []
      objectValues: []
    required: []
  ObjectEntity-write:
    properties:
      uri:
        description: 'An uri'
        type: string
        format: url
      entity: []
      objectValues: []
    required: []
  Value-read:
    properties:
      id:
        description: 'UUID of this person'
        type: \UuidInterface
      uri:
        description: 'An uri'
        type: string
        format: url
      value:
        description: 'The actual value'
        type: string
      integerValue:
        description: 'Integer if the value is type integer'
        type: int
      booleanValue:
        description: 'Boolean if the value is type boolean'
        type: bool
      arrayValue:
        description: 'Array if the value is type array'
        type: array
      dateTimeValue:
        description: 'DateTime if the value is type DateTime'
        type: \DateTime
      attribute: []
      objectEntity: []
    required: []
  Value-write:
    properties:
      uri:
        description: 'An uri'
        type: string
        format: url
      value:
        description: 'The actual value'
        type: string
      integerValue:
        description: 'Integer if the value is type integer'
        type: int
      booleanValue:
        description: 'Boolean if the value is type boolean'
        type: bool
      arrayValue:
        description: 'Array if the value is type array'
        type: array
      dateTimeValue:
        description: 'DateTime if the value is type DateTime'
        type: \DateTime
      attribute: []
      objectEntity: []
    required: []
  AuditTrail-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
      application:
        description: 'The application that made the request'
        type: string
        format: url
        maxLength: 255
      request:
        description: 'The id of the request within that application'
        type: string
        format: url
        maxLength: 255
      user:
        description: 'The user on behalf of wich the request was made'
        type: string
        format: url
        maxLength: 255
      subject:
        description: '???'
        type: string
        maxLength: 255
      process:
        description: 'The procces on behalf of wich the request was made'
        type: string
        maxLength: 255
      dataElements:
        description: 'The moment this request was created'
        type: array
      dataSubjects:
        description: 'The moment this request was created'
        type: array
      resource:
        description: 'The resource that was requested'
        type: string
        maxLength: 255
      resourceType:
        description: 'The type of the resource that was requested'
        type: string
        maxLength: 255
      route:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      endpoint:
        description: 'The endpoint that the request was made to'
        type: string
        maxLength: 255
      method:
        description: 'The method that was used'
        type: string
        maxLength: 255
      accept:
        description: 'The contentType that was reqousted'
        type: string
        maxLength: 255
      contentType:
        description: 'The contentType that was suplieds'
        type: string
        maxLength: 255
      content:
        description: 'The moment this request was created'
        type: string
        maxLength: 2555
      ip:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      headers:
        description: 'The headers supplied by client'
        type: array
      statusCode:
        description: 'The status code returned to client'
        type: int
        example: '200'
      notFound:
        description: 'Whether or not the reqousted endpoint was found'
        type: bool
        example: 'false'
      forbidden:
        description: 'Whether or not the client was allowed to the reqousted endpoint'
        type: bool
        example: 'false'
      ok:
        description: 'Whether or not there where any problems'
        type: bool
        example: 'true'
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2021-04-06 15:32:00'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2021-04-06 15:32:00'
    required: []
  AuditTrail-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line looks suspicius'
        maxLength: 2555
    required: []
  ChangeLog-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
      action:
        description: ''
        type: string
      objectId:
        description: ''
        type: string
      objectClass:
        description: ''
        type: string
      version:
        description: ''
        type: int
      data:
        description: ''
        type: array
      username:
        description: ''
        type: string
      session:
        description: 'The moment this request was created'
        type: string
        maxLength: 255
      dateCreated:
        description: 'The moment this request was created'
        type: string
        format: date-time
        example: '2021-04-06 15:32:00'
      dateModified:
        description: 'The moment this request last Modified'
        type: string
        format: date-time
        example: '2021-04-06 15:32:00'
    required: []
  ChangeLog-write:
    properties:
      note:
        description: 'A note conserning this log lin'
        type: string
        example: 'This log line is suspicius'
        maxLength: 2555
    required: []
tags:
  -
    name: Attribute
    description: |
      Description
      
      
  -
    name: Entity
    description: |
      
      
      
  -
    name: ObjectCommunication
    description: |
      Description
      
      
  -
    name: ObjectEntity
    description: |
      Description
      
      
  -
    name: Value
    description: |
      Description.
      
      
  -
    name: AuditTrail
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
  -
    name: ChangeLog
    description: |
      An resource representing a log line.
      
      This entity represents a product that can be ordered via the OrderRegistratieComponent.
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the ChangeLog resource'
      write: 'write right to the ChangeLog resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the ChangeLog resource'
      write: 'write right to the ChangeLog resource'
host: irc.zaakonline.nl
servers:
  -
    name: taalhuizen-bisc.commonground.nu
    url: eav-component.dev.taalhuizen-bisc.commonground.nu
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://proto.demo.common-ground.dev'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente "s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
